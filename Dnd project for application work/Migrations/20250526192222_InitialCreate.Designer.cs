// <auto-generated />
using Dnd_project_for_application_work.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dnd_project_for_application_work.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250526192222_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dnd_project_for_application_work.Domain_Layer.Alignment", b =>
                {
                    b.Property<int>("AlignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlignmentId"));

                    b.Property<string>("AlignmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlignmentId");

                    b.ToTable("Alignments");
                });

            modelBuilder.Entity("Dnd_project_for_application_work.Domain_Layer.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharacterId"));

                    b.Property<int>("AlignmentId")
                        .HasColumnType("int");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId");

                    b.HasIndex("AlignmentId");

                    b.HasIndex("ClassId");

                    b.HasIndex("RaceId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Dnd_project_for_application_work.Domain_Layer.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Dnd_project_for_application_work.Domain_Layer.Race", b =>
                {
                    b.Property<int>("RaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RaceId"));

                    b.Property<string>("RaceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RaceId");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("Dnd_project_for_application_work.Domain_Layer.Character", b =>
                {
                    b.HasOne("Dnd_project_for_application_work.Domain_Layer.Alignment", "Alignment")
                        .WithMany("Characters")
                        .HasForeignKey("AlignmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dnd_project_for_application_work.Domain_Layer.Class", "Class")
                        .WithMany("Characters")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dnd_project_for_application_work.Domain_Layer.Race", "Race")
                        .WithMany("Characters")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alignment");

                    b.Navigation("Class");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("Dnd_project_for_application_work.Domain_Layer.Alignment", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("Dnd_project_for_application_work.Domain_Layer.Class", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("Dnd_project_for_application_work.Domain_Layer.Race", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
